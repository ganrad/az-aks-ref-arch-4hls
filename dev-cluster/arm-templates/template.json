{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "devVnet_name": {
	    "defaultValue": "spokeVnet",
            "type": "string"
        },
        "devVnet_addr_cidr": {
	    "defaultValue": "192.168.0.0/16",
            "type": "string"
        },
        "devVnet_services_subnet_name": {
	    "defaultValue": "services-subnet",
            "type": "string"
        },
        "devVnet_services_subnet_cidr": {
	    "defaultValue": "192.168.1.0/24",
            "type": "string"
        },
        "devVnet_aks_subnet_name": {
	    "defaultValue": "aks-subnet",
            "type": "string"
        },
        "devVnet_aks_subnet_cidr": {
	    "defaultValue": "192.168.2.0/24",
            "type": "string"
        },
        "jump_vm_name": {
	    "defaultValue": "k8s-lab-vm",
            "type": "string"
        },
        "jump_vm_nic_name": {
	    "defaultValue": "k8s-lab-vm-nic",
            "type": "string"
        },
        "jump_vm_image": {
	    "defaultValue": {
               "publisher": "Debian",
               "offer": "debian-10",
               "sku": "10",
               "version": "latest"
             },
            "type": "object"
        },
        "jump_vm_size": {
	    "defaultValue": "Standard_B2s",
            "type": "string"
        },
        "jump_vm_disk_size": {
	    "defaultValue": "128",
            "type": "string"
        },
        "install_script_arg1": {
            "metadata": {
	       "description": "File system directory to mount the additional disk"
	    },
	    "defaultValue": "/opt/local",
            "type": "string"
        },
        "jump_vm_admin_uname": {
	    "defaultValue": "labuser",
            "type": "string"
        },
        "jump_vm_admin_pwd": {
	    "defaultValue": "[substring(uniqueString(resourceGroup().id,'labuser'),0,12)]",
            "type": "string"
        },
        "hubVnet_name": {
	    "defaultValue": "hubVnet",
            "type": "string"
        },
        "hubVnet_addr_cidr": {
	    "defaultValue": "192.169.0.0/16",
            "type": "string"
        },
        "hubVnet_bastion_subnet_name": {
	    "defaultValue": "AzureBastionSubnet",
            "type": "string"
        },
        "hubVnet_bastion_subnet_cidr": {
	    "defaultValue": "192.169.1.0/27",
            "type": "string"
        },
        "bastion_host_name": {
	    "defaultValue": "bastionHost",
            "type": "string"
        },
        "bastion_host_pip_name": {
	    "defaultValue": "bastionPublicIP",
            "type": "string"
        },
        "acr_name": {
	    "defaultValue": "k8sdevRegistry00",
            "type": "string"
        },
        "acr_sku": {
	    "defaultValue": "Standard",
            "type": "string"
        },
        "aks_cluster_name": {
	    "defaultValue": "k8sdevlab",
            "type": "string"
        },
        "aks_dns_prefix": {
	    "defaultValue": "testk8slab",
            "type": "string"
        },
        "aks_node_count": {
	    "defaultValue": "3",
            "type": "string"
        },
        "aks_cni_plugin": {
	    "defaultValue": "kubenet",
            "type": "string"
        },
        "aks_service_cidr": {
	    "defaultValue": "10.0.0.0/16",
            "type": "string"
        },
        "aks_dns_service_ip": {
	    "defaultValue": "10.0.0.10",
            "type": "string"
        },
        "aks_pod_cidr": {
	    "defaultValue": "10.244.0.0/16",
            "type": "string"
        },
        "aks_node_count_min": {
	    "defaultValue": "3",
            "type": "string"
        },
        "aks_node_count_max": {
	    "defaultValue": "5",
            "type": "string"
        },
        "aks_node_vm_size": {
	    "defaultValue": "Standard_DS2_v2",
            "type": "string"
        },
        "aks_node_osdisk_type": {
	    "defaultValue": "Ephemeral",
            "type": "string"
        },
        "aks_node_osdisk_size": {
	    "defaultValue": "60",
            "type": "string"
        },
        "aks_tags": {
	    "defaultValue": "env=lab unit=cloud",
            "type": "string"
        },
        "aks_nodepool_tags": {
	    "defaultValue": "env=lab unit=cloud",
            "type": "string"
        },
        "aks_windows_adm_uname": {
	    "defaultValue": "winadmin",
            "type": "string"
        },
        "aks_windows_adm_pwd": {
	    "defaultValue": "[substring(uniqueString(resourceGroup().id,'winadmin'),0,12)]",
            "type": "string"
        },
        "aks_load_balancer_sku": {
	    "defaultValue": "standard",
            "type": "string"
        },
        "aks_max_pods": {
	    "defaultValue": "110",
            "type": "string"
        }
    },
    "variables": {},
    "resources": [
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2020-11-01",
            "name": "[parameters('devVnet_name')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[parameters('devVnet_addr_cidr')]"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2020-11-01",
            "name": "[concat(parameters('devVnet_name'),'/',parameters('devVnet_aks_subnet_name'))]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('devVnet_name'))]"
            ],
            "properties": {
                "addressPrefix": "[parameters('devVnet_aks_subnet_cidr')]",
                "delegations": [],
                "privateEndpointNetworkPolicies": "Enabled",
                "privateLinkServiceNetworkPolicies": "Enabled"
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2020-11-01",
            "name": "[concat(parameters('devVnet_name'),'/',parameters('devVnet_services_subnet_name'))]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('devVnet_name'))]"
            ],
            "properties": {
                "addressPrefix": "[parameters('devVnet_services_subnet_cidr')]",
                "delegations": [],
                "privateEndpointNetworkPolicies": "Enabled",
                "privateLinkServiceNetworkPolicies": "Enabled"
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2020-11-01",
            "name": "[parameters('jump_vm_nic_name')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('devVnet_name'), parameters('devVnet_services_subnet_name'))]"
            ],
            "location": "[resourceGroup().location]",
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('devVnet_name'), parameters('devVnet_services_subnet_name'))]"
                            },
                            "primary": true,
                            "privateIPAddressVersion": "IPv4"
                        }
                    }
                ],
                "dnsSettings": {
                    "dnsServers": []
                },
                "enableAcceleratedNetworking": false,
                "enableIPForwarding": false
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2021-03-01",
            "name": "[parameters('jump_vm_name')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', parameters('jump_vm_nic_name'))]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('jump_vm_size')]"
                },
                "storageProfile": {
                    "imageReference": "[parameters('jump_vm_image')]",
                    "osDisk": {
                        "osType": "Linux",
                        "createOption": "FromImage",
                        "caching": "ReadWrite"
                    },
                    "dataDisks": [
                        {
                            "lun": 0,
                            "createOption": "Empty",
                            "caching": "None",
                            "diskSizeGB": "[int(parameters('jump_vm_disk_size'))]"
                        }
                    ]
                },
                "osProfile": {
                    "computerName": "[parameters('jump_vm_name')]",
                    "adminUsername": "[parameters('jump_vm_admin_uname')]",
		    "adminPassword": "[parameters('jump_vm_admin_pwd')]",
                    "linuxConfiguration": {
                        "disablePasswordAuthentication": false,
                        "provisionVMAgent": true,
                        "patchSettings": {
                            "patchMode": "ImageDefault",
                            "assessmentMode": "ImageDefault"
                        }
                    },
                    "secrets": [],
                    "allowExtensionOperations": true
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('jump_vm_nic_name'))]",
                            "properties": {
                                "primary": true
                            }
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "apiVersion": "2021-03-01",
            "name": "[concat(parameters('jump_vm_name'), '/customScript')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines', parameters('jump_vm_name'))]"
            ],
            "properties": {
                "autoUpgradeMinorVersion": true,
                "publisher": "Microsoft.Azure.Extensions",
                "type": "customScript",
                "typeHandlerVersion": "2.1",
                "settings": {
                },
                "protectedSettings": {
		    "commandToExecute": "[concat('./install-script.sh',' ',parameters('install_script_arg1'))]",
                    "fileUris": [
                        "https://raw.githubusercontent.com/ganrad/az-aks-ref-arch-4hls/main/dev-cluster/azure-cli/install-script.sh"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2020-11-01",
            "name": "[parameters('bastion_host_pip_name')]",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "Standard",
                "tier": "Regional"
            },
            "properties": {
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "Static",
                "idleTimeoutInMinutes": 4,
                "ipTags": []
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2020-11-01",
            "name": "[parameters('hubVnet_name')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[parameters('hubVnet_addr_cidr')]"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2020-11-01",
            "name": "[concat(parameters('hubVnet_name'),'/',parameters('hubVnet_bastion_subnet_name'))]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('hubVnet_name'))]"
            ],
            "properties": {
                "addressPrefix": "[parameters('hubVnet_bastion_subnet_cidr')]",
                "delegations": [],
                "privateEndpointNetworkPolicies": "Enabled",
                "privateLinkServiceNetworkPolicies": "Enabled"
            }
        },
        {
            "type": "Microsoft.Network/bastionHosts",
            "apiVersion": "2020-11-01",
            "name": "[parameters('bastion_host_name')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', parameters('bastion_host_pip_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('hubVnet_name'), parameters('hubVnet_bastion_subnet_name'))]"
            ],
            "sku": {
                "name": "Basic"
            },
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "bastion_ip_config",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('bastion_host_pip_name'))]"
                            },
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('hubVnet_name'), parameters('hubVnet_bastion_subnet_name'))]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.ContainerRegistry/registries",
            "apiVersion": "2020-11-01-preview",
            "name": "[parameters('acr_name')]",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "Standard",
                "tier": "[parameters('acr_sku')]"
            },
            "properties": {
                "adminUserEnabled": false,
                "policies": {
                    "quarantinePolicy": {
                        "status": "disabled"
                    },
                    "trustPolicy": {
                        "type": "Notary",
                        "status": "disabled"
                    },
                    "retentionPolicy": {
                        "days": 7,
                        "status": "disabled"
                    }
                },
                "encryption": {
                    "status": "disabled"
                },
                "dataEndpointEnabled": false,
                "publicNetworkAccess": "Enabled",
                "networkRuleBypassOptions": "AzureServices",
                "zoneRedundancy": "Disabled",
                "anonymousPullEnabled": false
            }
        },
        {
            "type": "Microsoft.ContainerService/managedClusters",
            "apiVersion": "2021-05-01",
            "name": "[parameters('aks_cluster_name')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('devVnet_name'), parameters('devVnet_aks_subnet_name'))]",
                "[resourceId('Microsoft.ContainerRegistry/registries', parameters('acr_name'))]"
            ],
            "tags": {
                "env": "lab",
                "unit": "cloud"
            },
            "sku": {
                "name": "Basic",
                "tier": "Free"
            },
	    "identity": {
	       "type": "SystemAssigned"
	    },
            "properties": {
		"dnsPrefix": "k8slab00",
                "agentPoolProfiles": [
                    {
                        "name": "nodepool1",
                        "count": "[int(parameters('aks_node_count'))]",
                        "vmSize": "[parameters('aks_node_vm_size')]",
                        "osDiskSizeGB": "[int(parameters('aks_node_osdisk_size'))]",
                        "osDiskType": "[parameters('aks_node_osdisk_type')]",
                        "kubeletDiskType": "OS",
                        "vnetSubnetID": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('devVnet_name'), parameters('devVnet_aks_subnet_name'))]",
                        "maxPods": "[int(parameters('aks_max_pods'))]",
                        "type": "VirtualMachineScaleSets",
                        "availabilityZones": [
                            "1",
                            "2",
                            "3"
                        ],
                        "maxCount": "[int(parameters('aks_node_count_max'))]",
                        "minCount": "[int(parameters('aks_node_count_min'))]",
                        "enableAutoScaling": true,
                        "enableNodePublicIP": false,
                        "tags": {
                            "env": "lab",
                            "unit": "cloud"
                        },
                        "nodeLabels": {},
                        "mode": "System",
                        "enableEncryptionAtHost": false,
                        "osType": "Linux",
                        "osSKU": "Ubuntu",
                        "enableFIPS": false
                    }
                ],
                "addonProfiles": {
                    "httpApplicationRouting": {
                        "enabled": true
                    }
                },
                "enableRBAC": true,
                "networkProfile": {
                    "networkPlugin": "kubenet",
                    "loadBalancerSku": "Standard",
                    "loadBalancerProfile": {
                        "managedOutboundIPs": {
                            "count": 1
                        }
                    },
                    "podCidr": "[parameters('aks_pod_cidr')]",
                    "serviceCidr": "[parameters('aks_service_cidr')]",
                    "dnsServiceIP": "[parameters('aks_dns_service_ip')]",
                    "dockerBridgeCidr": "172.17.0.1/16",
                    "outboundType": "loadBalancer"
                },
                "autoScalerProfile": {
                    "balance-similar-node-groups": "false",
                    "expander": "random",
                    "max-empty-bulk-delete": "10",
                    "max-graceful-termination-sec": "600",
                    "max-node-provision-time": "15m",
                    "max-total-unready-percentage": "45",
                    "new-pod-scale-up-delay": "0s",
                    "ok-total-unready-count": "3",
                    "scale-down-delay-after-add": "10m",
                    "scale-down-delay-after-delete": "10s",
                    "scale-down-delay-after-failure": "3m",
                    "scale-down-unneeded-time": "10m",
                    "scale-down-unready-time": "20m",
                    "scale-down-utilization-threshold": "0.5",
                    "scan-interval": "10s",
                    "skip-nodes-with-local-storage": "false",
                    "skip-nodes-with-system-pods": "true"
                }
            }
        },
        {
            "type": "Microsoft.ContainerService/managedClusters/agentPools",
            "apiVersion": "2021-05-01",
            "name": "[concat(parameters('aks_cluster_name'), '/nodepool1')]",
            "dependsOn": [
                "[resourceId('Microsoft.ContainerService/managedClusters', parameters('aks_cluster_name'))]"
            ],
            "properties": {
                "count": "[int(parameters('aks_node_count'))]",
                "vmSize": "[parameters('aks_node_vm_size')]",
                "osDiskSizeGB": "[int(parameters('aks_node_osdisk_size'))]",
                "osDiskType": "[parameters('aks_node_osdisk_type')]",
                "kubeletDiskType": "OS",
                "vnetSubnetID": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('devVnet_name'), parameters('devVnet_aks_subnet_name'))]",
                "maxPods": "[int(parameters('aks_max_pods'))]",
                "type": "VirtualMachineScaleSets",
                "availabilityZones": [
                    "1",
                    "2",
                    "3"
                ],
                "maxCount": "[int(parameters('aks_node_count_max'))]",
                "minCount": "[int(parameters('aks_node_count_min'))]",
                "enableAutoScaling": true,
                "enableNodePublicIP": false,
                "tags": {
                    "env": "lab",
                    "unit": "cloud"
                },
                "nodeLabels": {},
                "mode": "System",
                "enableEncryptionAtHost": false,
                "osType": "Linux",
                "osSKU": "Ubuntu",
                "enableFIPS": false
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
            "apiVersion": "2020-11-01",
            "name": "[concat(parameters('devVnet_name'), '/labToHubVnet')]",
            "dependsOn": [
                "[resourceId('Microsoft.ContainerService/managedClusters/agentPools', parameters('aks_cluster_name'), 'nodepool1')]",
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('devVnet_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('hubVnet_name'))]"
            ],
            "properties": {
                "remoteVirtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('hubVnet_name'))]"
                },
                "allowVirtualNetworkAccess": true,
                "allowForwardedTraffic": false,
                "allowGatewayTransit": false,
                "useRemoteGateways": false,
                "remoteAddressSpace": {
                    "addressPrefixes": [
                        "[parameters('hubVnet_addr_cidr')]"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
            "apiVersion": "2020-11-01",
            "name": "[concat(parameters('hubVnet_name'), '/hubToLabVnet')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks/virtualNetworkPeerings', parameters('devVnet_name'),'labToHubVnet')]",
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('devVnet_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('hubVnet_name'))]"
            ],
            "properties": {
                "remoteVirtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('devVnet_name'))]"
                },
                "allowVirtualNetworkAccess": true,
                "allowForwardedTraffic": false,
                "allowGatewayTransit": false,
                "useRemoteGateways": false,
                "remoteAddressSpace": {
                    "addressPrefixes": [
                        "[parameters('devVnet_addr_cidr')]"
                    ]
                }
            }
        }
    ],
    "outputs": {
	"jump_vm_admin_name": {
	  "value": "[parameters('jump_vm_admin_uname')]",
	  "type": "string"
	},
	"jump_vm_admin_pwd": {
	  "value": "[parameters('jump_vm_admin_pwd')]",
	  "type": "string"
	},
	"aks_windows_adm_name": {
	  "value": "[parameters('aks_windows_adm_uname')]",
	  "type": "string"
	},
	"aks_windows_adm_pwd": {
	  "value": "[parameters('aks_windows_adm_pwd')]",
	  "type": "string"
	}
    }
}
